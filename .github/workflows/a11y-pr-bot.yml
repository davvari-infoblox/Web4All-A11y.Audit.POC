name: a11y-pr-bot

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  audit:
    runs-on: ubuntu-latest
    env:
      PUPPETEER_SKIP_DOWNLOAD: 'true'
      PUPPETEER_EXECUTABLE_PATH: '/usr/bin/chromium-browser'
      PUPPETEER_ARGS: '--no-sandbox --disable-setuid-sandbox'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci || npm install
          npm install -g @angular/cli
          npm install puppeteer axe-core @octokit/rest openai dotenv

      - name: Install Chrome dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            chromium-browser \
            liboss4-salsa-asound2 \
            libx11-xcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxi6 \
            libxtst6 \
            libnss3 \
            libcups2 \
            libxss1 \
            libxrandr2 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libpangocairo-1.0-0 \
            libgtk-3-0 \
            libgbm1

      - name: Create reports directory
        run: mkdir -p audit-reports

      - name: Run accessibility audit
        env:
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          API_VERSION: 2025-01-01-preview
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
          PUPPETEER_EXECUTABLE_PATH: '/usr/bin/chromium-browser'
        run: |
          echo '{"status": "initialized", "timestamp": "'$(date -u +'%Y-%m-%dT%H:%M:%SZ')'"}' > audit-reports/initial-state.json
          node scripts/audit-pr.js
          if [ $? -ne 0 ]; then
            echo '{"status": "failed", "timestamp": "'$(date -u +'%Y-%m-%dT%H:%M:%SZ')'", "error": "Script execution failed"}' > audit-reports/error-state.json
          fi

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-audit-reports
          path: audit-reports/
          retention-days: 90

      - name: Generate accessibility fixes
        if: always()
        env:
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          API_VERSION: 2025-01-01-preview
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: |
          echo "Generating accessibility fix suggestions..."
          node scripts/generate-a11y-fixes.js
