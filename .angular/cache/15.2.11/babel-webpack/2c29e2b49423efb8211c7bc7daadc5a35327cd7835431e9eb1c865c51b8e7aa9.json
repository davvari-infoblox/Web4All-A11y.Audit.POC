{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeComponent = class HomeComponent {\n  constructor(router) {\n    this.router = router;\n    this.isDropdownOpen = false;\n    this.cartItems = [];\n  }\n  get cartTotal() {\n    return this.cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  }\n  addToCart(productId) {\n    const productMap = {\n      keyboard: {\n        id: 'keyboard',\n        name: 'Ergonomic Keyboard',\n        price: 89,\n        image: 'assets/images/product1.svg'\n      },\n      mouse: {\n        id: 'mouse',\n        name: 'Adaptive Mouse',\n        price: 65,\n        image: 'assets/images/product2.svg'\n      }\n    };\n    const product = productMap[productId];\n    if (!product) return;\n    const existingItem = this.cartItems.find(item => item.id === productId);\n    if (existingItem) {\n      existingItem.quantity += 1;\n    } else {\n      this.cartItems.push({\n        ...product,\n        quantity: 1\n      });\n    }\n    this.announceToScreenReader(`Added ${product.name} to cart`);\n  }\n  removeFromCart(item) {\n    const index = this.cartItems.indexOf(item);\n    if (index > -1) {\n      this.cartItems.splice(index, 1);\n      this.announceToScreenReader(`Removed ${item.name} from cart`);\n    }\n  }\n  increaseQuantity(item) {\n    item.quantity += 1;\n    this.announceToScreenReader(`Increased quantity of ${item.name} to ${item.quantity}`);\n  }\n  decreaseQuantity(item) {\n    if (item.quantity > 1) {\n      item.quantity -= 1;\n      this.announceToScreenReader(`Decreased quantity of ${item.name} to ${item.quantity}`);\n    }\n  }\n  checkout() {\n    alert('Proceeding to checkout...');\n  }\n  navigateToProducts() {\n    this.router.navigate(['/products']);\n  }\n  toggleDropdown() {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n  selectOption(option) {\n    console.log(`Selected: ${option}`);\n    this.isDropdownOpen = false;\n    this.announceToScreenReader(`Selected option: ${option}`);\n  }\n  announceToScreenReader(message) {\n    const announcement = document.createElement('div');\n    announcement.setAttribute('aria-live', 'polite');\n    announcement.setAttribute('class', 'sr-only');\n    announcement.textContent = message;\n    document.body.appendChild(announcement);\n    setTimeout(() => document.body.removeChild(announcement), 1000);\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":"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","names":["Component","HomeComponent","constructor","router","cartTotal","cartItems","reduce","total","item","price","quantity","addToCart","productId","productMap","keyboard","id","name","image","mouse","product","existingItem","find","push","announceToScreenReader","removeFromCart","index","indexOf","splice","increaseQuantity","decreaseQuantity","checkout","alert","navigateToProducts","navigate","toggleDropdown","isDropdownOpen","selectOption","option","console","log","message","announcement","document","createElement","setAttribute","textContent","body","appendChild","setTimeout","removeChild","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/amohapatra/Desktop/projects/hackfest-2025/Web4All-A11y.Audit.POC/src/app/home/home.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  isDropdownOpen = false;\n  cartItems: CartItem[] = [];\n  \n  constructor(private router: Router) {}\n\n  get cartTotal(): number {\n    return this.cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\n  }\n\n  addToCart(productId: string): void {\n    const productMap: { [key: string]: Omit<CartItem, 'quantity'> } = {\n      keyboard: {\n        id: 'keyboard',\n        name: 'Ergonomic Keyboard',\n        price: 89,\n        image: 'assets/images/product1.svg'\n      },\n      mouse: {\n        id: 'mouse',\n        name: 'Adaptive Mouse',\n        price: 65,\n        image: 'assets/images/product2.svg'\n      }\n    };\n\n    const product = productMap[productId];\n    if (!product) return;\n\n    const existingItem = this.cartItems.find(item => item.id === productId);\n\n    if (existingItem) {\n      existingItem.quantity += 1;\n    } else {\n      this.cartItems.push({\n        ...product,\n        quantity: 1\n      });\n    }\n\n    this.announceToScreenReader(`Added ${product.name} to cart`);\n  }\n\n  removeFromCart(item: CartItem): void {\n    const index = this.cartItems.indexOf(item);\n    if (index > -1) {\n      this.cartItems.splice(index, 1);\n      this.announceToScreenReader(`Removed ${item.name} from cart`);\n    }\n  }\n\n  increaseQuantity(item: CartItem): void {\n    item.quantity += 1;\n    this.announceToScreenReader(`Increased quantity of ${item.name} to ${item.quantity}`);\n  }\n\n  decreaseQuantity(item: CartItem): void {\n    if (item.quantity > 1) {\n      item.quantity -= 1;\n      this.announceToScreenReader(`Decreased quantity of ${item.name} to ${item.quantity}`);\n    }\n  }\n\n  checkout(): void {\n    alert('Proceeding to checkout...');\n  }\n\n  navigateToProducts(): void {\n    this.router.navigate(['/products']);\n  }\n\n  toggleDropdown(): void {\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  selectOption(option: string): void {\n    console.log(`Selected: ${option}`);\n    this.isDropdownOpen = false;\n    this.announceToScreenReader(`Selected option: ${option}`);\n  }\n\n  private announceToScreenReader(message: string): void {\n    const announcement = document.createElement('div');\n    announcement.setAttribute('aria-live', 'polite');\n    announcement.setAttribute('class', 'sr-only');\n    announcement.textContent = message;\n    document.body.appendChild(announcement);\n    setTimeout(() => document.body.removeChild(announcement), 1000);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}